{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/cadastro.service.ts","./src/app/utils/HttpHelper.ts","./src/app/web-api/web-api.component.css","./src/app/web-api/web-api.component.html","./src/app/web-api/web-api.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-web-api></app-web-api>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isCollapsed = true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { CadastroService } from './services/cadastro.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgForm } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { Renderer2 } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { WebApiComponent } from './web-api/web-api.component';\nimport { CollapseModule, BsDropdownModule } from 'ngx-bootstrap';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\nimport { NgModel } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WebApiComponent\n  ],\n  imports: [\n     CollapseModule.forRoot(), BsDropdownModule.forRoot(),\n    // NgbModule.forRoot(),\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'XSRF-TOKEN',\n      headerName: 'X-XSRF-TOKEN'\n  }),\n  ],\n  providers: [CadastroService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { HttpHelper } from './../utils/HttpHelper';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\nimport { NgModel } from '@angular/forms';\r\n          // tslint:disable:prefer-const\r\n@Injectable()\r\nexport class CadastroService extends HttpHelper {\r\n  private _cadastraCategoria = 'Categoria/CadastraCategoria';\r\n  private _cadastraProduto = 'Produto/CadastraProduto';\r\n  private _buscaCategoria = 'Categoria/GetCategoria';\r\n  private _buscaProdutos = 'Produto/GetProdutos';\r\n  private _delCat = 'Categoria/apagaCat';\r\n  private _altCat = 'Categoria/AlteraCat';\r\n  private _delProd = 'Produto/ApagaProd';\r\n  private _reportProdCat = 'Reports/GetProdCat';\r\n\r\n  constructor( http: Http) {\r\n    super(http);\r\n  }\r\n  cadastraCategoria(nomeCatParam: string) {\r\n    let result = this.postaction(this._cadastraCategoria, { NomeCat: nomeCatParam}).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let categoria = <any>result;\r\n          return categoria;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n\r\n  cadastraProduto(nomeProdParam: string, idCatParam: Number) {\r\n    let result = this.postaction(this._cadastraProduto, { NomeProd: nomeProdParam, IdCat: idCatParam}).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n  alteraCat( idCatParam: Number, nomeCatParam: string) {\r\n    let result = this.putaction(this._altCat, { IdCat: idCatParam, NomeCat: nomeCatParam, }).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n  buscaCategoria(idCatParam: Number, nomeCatParam: string ) {\r\n    let result = this.getaction(this._buscaCategoria, { NomeCat: nomeCatParam, IdCat: idCatParam}).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n  buscaProduto(idProdParam: number, nomeProdParam: string, idCatParam: number) {\r\n    let result = this.getaction(this._buscaProdutos,\r\n      { IdProd: idProdParam, NomeProd: nomeProdParam, IdCat: idCatParam}).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n\r\n  apagaCat(idCatParam: number ) {\r\n    let result = this.deleteaction(this._delCat, { IdCat: idCatParam }).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n\r\n  apagaProd(idProdParam: number ) {\r\n    let result = this.deleteaction(this._delProd, { IdProd: idProdParam }).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n  reportProdCat(idProdParam: number, nomeProdParam: string, idCatParam: number, nomeCatParam: string) {\r\n    let result = this.getaction(this._reportProdCat,\r\n      { IdProd: idProdParam, NomeProd: nomeProdParam, IdCat: idCatParam, NomeCat: nomeCatParam}).map(\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      result => {\r\n\r\n          let busca = <any>result;\r\n          return busca;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/cadastro.service.ts","import { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\n\r\nexport class HttpHelper {\r\n    private _base = \"API/\";\r\n    constructor(private _http: Http) {\r\n    }\r\n\r\n    get haserror(): boolean {\r\n        return this.errormsg != null;\r\n    }\r\n\r\n    errormsg: string;\r\n\r\n    private obj_to_query(obj: any) {\r\n        var parts: any = [];\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                parts.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\r\n            }\r\n        }\r\n        return parts? \"?\" + parts.join('&'): \"\";\r\n    }\r\n\r\n    getaction<T>(path: string, body: any = null) {\r\n        return this._http.get(this._base + path + this.obj_to_query(body))\r\n            .map(res => {\r\n                return <T>res.json();\r\n            })\r\n            .catch(this._handleError);\r\n    }\r\n\r\n    deleteaction<T>(path: string, body: any = null) {\r\n      return this._http.delete(this._base + path + this.obj_to_query(body))\r\n          .map(res => {\r\n              return <T>res.json();\r\n          })\r\n          .catch(this._handleError);\r\n  }\r\n\r\n    postaction(path: string, param: any = null) {\r\n        this.errormsg = null;\r\n\r\n        let body = JSON.stringify(param);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this._http.post(this._base + path, body, options)\r\n            .map(this._handleSuccess)\r\n            .catch(this._handleError);\r\n    }\r\n    putaction(path: string, param: any = null) {\r\n      this.errormsg = null;\r\n\r\n      let body = JSON.stringify(param);\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n\r\n      return this._http.put(this._base + path, body, options)\r\n          .map(this._handleSuccess)\r\n          .catch(this._handleError);\r\n  }\r\n\r\n    private _handleError(error: Response) {\r\n        if (error.status == 401) {\r\n            localStorage.removeItem('currentUser');\r\n            location.reload();\r\n        }\r\n\r\n        return Observable.throw(error || 'Server error');\r\n    }\r\n    private _handleSuccess(success: Response) {\r\n        var jsonresult = null;\r\n        try {\r\n            jsonresult = success.json();\r\n        } catch (ex) {\r\n            return success;\r\n        }\r\n\r\n        return jsonresult;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utils/HttpHelper.ts","module.exports = \".menu-fixed{\\r\\n  top: 20px\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/web-api/web-api.component.css\n// module id = ./src/app/web-api/web-api.component.css\n// module chunks = main","module.exports = \"\\n<body class=\\\"fixed-nav sticky-footer bg-dark\\\" id=\\\"page-top\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\" id=\\\"mainNav\\\">\\n      <a class=\\\"navbar-brand text-white bg-dark\\\" (click)=\\\"aba= 'home'\\\">Easy CRUD</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\n      data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggngler-icon\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n        <ul class=\\\"navbar-nav navbar-sidenav\\\" id=\\\"exampleAccordion\\\">\\n\\n          <div class=\\\"dropdown\\\">\\n              <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                  Product\\n              </button>\\n              <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                <a class=\\\"dropdown-item\\\"  (click)=\\\"aba= 'cadastroProd'\\\">Cadastro de Produto</a>\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"aba= 'altProd'\\\" >Alterar Produto</a>\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"aba= 'delProd'\\\">Excluir Produto</a>\\n              </div>\\n            </div>\\n          <div class=\\\"dropdown\\\">\\n              <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                  Category\\n              </button>\\n              <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                <a class=\\\"dropdown-item\\\"  (click)=\\\"aba= 'cadastroCat'\\\">Cadastro de Categoria</a>\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"aba= 'altCat'\\\">Alterar Categoria</a>\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"aba= 'delCat'\\\">Exclusão de Categoria</a>\\n              </div>\\n            </div>\\n            <div class=\\\"dropdown\\\">\\n                <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                    Reports\\n                </button>\\n                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                  <a class=\\\"dropdown-item\\\"  (click)=\\\"aba= 'reportProd'\\\">Produtos Cadastrados</a>\\n                  <a class=\\\"dropdown-item\\\" (click)=\\\"aba= 'reportProdCat'\\\">Produtos por Categoria</a>\\n                  <a class=\\\"dropdown-item\\\" (click)=\\\"aba= 'reportCat'\\\">Categorias Cadastradas</a>\\n                </div>\\n              </div>\\n        </ul>\\n      </div>\\n    </nav>\\n\\n</body>\\n\\n\\n\\n\\n<form [ngSwitch]=\\\"aba\\\" >\\n      <!--Produtos-->\\n    <div class=\\\"container\\\" *ngSwitchCase=\\\"'cadastroProd'\\\">\\n        <div class=\\\"card card-register mx-auto mt-5\\\">\\n          <div class=\\\"card-header text-center\\\">Cadastra Produto</div>\\n          <div class=\\\"card-body\\\">\\n            <form>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                    <label for=\\\"NomeProd\\\">Produto</label>\\n                    <input class=\\\"form-control\\\" id=\\\"NomeProd\\\" name=\\\"NomeProd\\\" type=\\\"text\\\" placeholder=\\\"Digite o nome do produto\\\"[(ngModel)]=\\\"NomeProd\\\" required>\\n                  </div>\\n                </div>\\n              </div>\\n              <label for=\\\"categorias\\\">Selecione a categoria</label>\\n              <div class=\\\"form-group col align-self-center\\\">\\n                  <select [(ngModel)]=\\\"IdCat\\\" class=\\\"custom-select\\\"  name=\\\"categorias\\\">\\n                      <option *ngFor=\\\"let busca of categorias\\\" [value]=\\\"busca.IdCat\\\">{{busca.IdCat}} | {{busca.NomeCat}}</option>\\n                  </select>\\n              </div>\\n              <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"cadastrarProduto(NomeProd, IdCat);\\\">Cadastrar Produto</a>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"container\\\" *ngSwitchCase=\\\"'altProd'\\\">\\n          <div class=\\\"card card-register mx-auto mt-5\\\">\\n            <div class=\\\"card-header text-center\\\">Alterar Produto</div>\\n            <div class=\\\"card-body\\\">\\n              <form>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <label for=\\\"NomeProd\\\">Produto</label>\\n                      <input class=\\\"form-control\\\" id=\\\"NomeProd\\\" name=\\\"NomeProd\\\" type=\\\"text\\\" placeholder=\\\"Digite o novo nome do produto\\\" [(ngModel)]=\\\"NomeProd\\\" required>\\n                    </div>\\n                  </div>\\n                </div>\\n                <label for=\\\"categorias\\\">Selecione o Produto que será alterado</label>\\n                <div class=\\\"form-group\\\">\\n                    <select [(ngModel)]=\\\"NomeProd\\\" class=\\\"custom-select\\\"  name=\\\"produtos\\\">\\n                        <option *ngFor=\\\"let buscaProd of produtos\\\" [value]=\\\"buscaProd.IdProd\\\">{{buscaProd.IdProd}} | {{buscaProd.NomeProd}}</option>\\n                    </select>\\n                  </div>\\n                <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"cadastrarProduto(NomeProd, IdCat);\\\">Alterar Produto</a>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"container\\\" *ngSwitchCase=\\\"'delProd'\\\">\\n          <div class=\\\"card card-register mx-auto mt-5\\\">\\n            <div class=\\\"card-header text-center\\\">Deleta Produto</div>\\n            <div class=\\\"card-body\\\">\\n              <form>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"form-row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                      <label for=\\\"produtos\\\">Produto</label>\\n                        <div class=\\\"form-group\\\">\\n                          <select [(ngModel)]=\\\"IdProd\\\" class=\\\"custom-select\\\"  name=\\\"produtos\\\">\\n                            <option *ngFor=\\\"let buscaProd of produtos\\\" [value]=\\\"buscaProd.IdProd\\\">{{buscaProd.IdProd}} | {{buscaProd.NomeProd}}</option>\\n                        </select>\\n                        </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"apagarProd(IdProd);\\\">Deletar Produto</a>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n        <!--Categorias !-->\\n        <div class=\\\"container\\\" *ngSwitchCase=\\\"'cadastroCat'\\\">\\n            <div class=\\\"card card-register mx-auto mt-5\\\">\\n              <div class=\\\"card-header text-center\\\">Cadastra Categoria</div>\\n              <div class=\\\"card-body\\\">\\n                <form>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-row\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <label for=\\\"NomeCat\\\">Categoria</label>\\n                        <input class=\\\"form-control\\\" id=\\\"NomeCat\\\" name=\\\"NomeCat\\\" type=\\\"text\\\" placeholder=\\\"Digite o nome da categoria\\\"[(ngModel)]=\\\"NomeCat\\\" required>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"cadastrarCategoria(NomeCat);\\\">Cadastrar Categoria</a>\\n                </form>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"container\\\" *ngSwitchCase=\\\"'delCat'\\\">\\n              <div class=\\\"card card-register mx-auto mt-5\\\">\\n                <div class=\\\"card-header text-center\\\">Deleta Categoria</div>\\n                <div class=\\\"card-body\\\">\\n                  <form>\\n                    <div class=\\\"form-group\\\">\\n                      <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                          <label for=\\\"categorias\\\">Categoria</label>\\n                            <div class=\\\"form-group\\\">\\n                              <select [(ngModel)]=\\\"IdCat\\\" class=\\\"custom-select\\\"  name=\\\"categorias\\\">\\n                                  <option *ngFor=\\\"let busca of categorias\\\" [value]=\\\"busca.IdCat\\\">{{busca.IdCat}} | {{busca.NomeCat}}</option>\\n                              </select>\\n                            </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"apagarCat(IdCat);\\\">Deletar Categoria</a>\\n                  </form>\\n                </div>\\n              </div>\\n            </div>\\n            <!--NAO FUNFA!-->\\n            <div class=\\\"container\\\" *ngSwitchCase=\\\"'altCat'\\\">\\n                <div class=\\\"card card-register mx-auto mt-5\\\">\\n                  <div class=\\\"card-header text-center\\\">Alterar Categoria</div>\\n                  <div class=\\\"card-body\\\">\\n                    <form>\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"form-row\\\">\\n                              <div class=\\\"col-md-12\\\">\\n                                <label for=\\\"NomeCat\\\">Categoria</label>\\n                                <input class=\\\"form-control\\\" id=\\\"NomeCat\\\" name=\\\"NomeCat\\\" type=\\\"text\\\" placeholder=\\\"Digite o nome da categoria\\\"[(ngModel)]=\\\"NomeCat\\\" required>\\n                              </div>\\n                            </div>\\n                          </div>\\n                      <div class=\\\"form-group\\\">\\n                        <div class=\\\"form-row\\\">\\n                          <div class=\\\"col-md-12\\\">\\n                            <label for=\\\"NomeProd\\\">Antiga Categoria</label>\\n                              <div class=\\\"form-group\\\">\\n                                <select [(ngModel)]=\\\"IdCat\\\" class=\\\"custom-select\\\"  name=\\\"categorias\\\">\\n                                    <option *ngFor=\\\"let busca of categorias\\\" [value]=\\\"busca.NomeCat\\\">{{busca.IdCat}} | {{busca.NomeCat}}</option>\\n                                </select>\\n                              </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"alterarCat(IdCat, NomeCat);\\\">Alterar Categoria</a>\\n                    </form>\\n                  </div>\\n                </div>\\n              </div>\\n<!--Relatorios!-->\\n<div class=\\\"container\\\" *ngSwitchCase=\\\"'reportCat'\\\">\\n    <div class=\\\"card card-register mx-auto mt-5\\\">\\n      <div class=\\\"card-header text-center\\\">Relatorio</div>\\n      <div class=\\\"card-body\\\">\\n        <form>\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\n                <thead>\\n                  <tr>\\n                    <th>Codigo Categoria</th>\\n                    <th>Categoria</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let busca of categorias\\\">\\n                    <td> {{busca.IdCat}} </td>\\n                    <td>{{busca.NomeCat}}</td>\\n                  </tr>\\n                </tbody>\\n                </table>\\n                </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container\\\" *ngSwitchCase=\\\"'reportProd'\\\">\\n      <div class=\\\"card card-register mx-auto mt-5\\\">\\n        <div class=\\\"card-header text-center\\\">Relatorio</div>\\n        <div class=\\\"card-body\\\">\\n          <form>\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>Codigo Produto</th>\\n                      <th>Produto</th>\\n                      <th>Categoria</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let busca of produtos\\\">\\n                      <td>{{busca.IdProd}} </td>\\n                      <td>{{busca.NomeProd}}</td>\\n                      <td>{{busca.IdCat}}</td>\\n                    </tr>\\n                  </tbody>\\n                  </table>\\n                  </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"container\\\" *ngSwitchCase=\\\"'reportProdCat'\\\">\\n      <div class=\\\"card card-register mx-auto mt-5\\\">\\n        <div class=\\\"card-header text-center\\\">Relatorio de Produtos Por Categoria</div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <label for=\\\"categorias\\\">Selecione a Categoria</label>\\n                    <div class=\\\"form-group\\\">\\n                      <select [(ngModel)]=\\\"IdCat\\\" class=\\\"custom-select\\\"  name=\\\"categorias\\\">\\n                          <option *ngFor=\\\"let busca of categorias\\\" [value]=\\\"busca.IdCat\\\">{{busca.IdCat}} | {{busca.NomeCat}}</option>\\n                      </select>\\n                    </div>\\n                </div>\\n              </div>\\n              <a class=\\\"btn btn-primary btn-block\\\" (click)=\\\"reportsProdCat(IdCat);\\\">Gerar Relatorio</a>\\n          <form>\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-bordered\\\" id=\\\"dataTable\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>Codigo Produto</th>\\n                      <th>Produto</th>\\n                      <th>Categoria</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let busca of relatorios\\\">\\n                      <td>{{busca.IdProd}} </td>\\n                      <td>{{busca.NomeProd}}</td>\\n                      <td>{{busca.IdCat}}</td>\\n                    </tr>\\n                  </tbody>\\n                  </table>\\n                  </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-12 menu-fixed\\\" *ngSwitchCase=\\\"'home'\\\">\\n      <div class=\\\"card text-center\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-bar-chart\\\"></i> CRUD</div>\\n        <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Igor Alexandre Saraiva Silva</h5>\\n            <p class=\\\"card-text\\\">This is the implementation of a simple CRUD. I'm using ASP.NET + Angular 5 with bootstrap and Entity Framework </p>\\n        </div>\\n        <div class=\\\"card-footer small text-muted\\\">\\n          <a href=\\\"https://www.linkedin.com/in/igoralexandre/\\\" class=\\\"btn-outline-info\\\">Linkedin</a>\\n        </div>\\n      </div>\\n    </div>\\n    </form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/web-api/web-api.component.html\n// module id = ./src/app/web-api/web-api.component.html\n// module chunks = main","import { CadastroService } from \"./../services/cadastro.service\";\nimport { Component, OnInit } from \"@angular/core\";\n// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport \"rxjs/add/operator/map\";\nimport { Http } from \"@angular/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport { NgModel } from \"@angular/forms\";\n@Component({\n  selector: \"app-web-api\",\n  templateUrl: \"./web-api.component.html\",\n  styleUrls: [\"./web-api.component.css\"]\n})\nexport class WebApiComponent implements OnInit {\n  // tslint:disable-next-line:no-inferrable-types\n  aba: string = \"home\";\n  NomeCat: string;\n  NomeProd: string;\n  IdCat: number;\n  IdProd: number;\n  categorias: any[];\n  produtos: any[];\n  show: boolean;\n  relatorios: any[];\n\n  constructor(private service: CadastroService) {\n    this.buscarCategoria();\n    this.buscarProdutos();\n    this.reportsProdCat();\n  }\n\n  cadastrarCategoria() {\n    this.service\n      .cadastraCategoria(this.NomeCat)\n      .subscribe(retorno => alert(retorno));\n  }\n  cadastrarProduto() {\n    this.service\n      .cadastraProduto(this.NomeProd, this.IdCat)\n      .subscribe(retorno => alert(retorno));\n  }\n\n  alterarCat() {\n    this.service\n      .alteraCat(this.IdCat, this.NomeCat)\n      .subscribe(retorno => alert(retorno));\n  }\n  buscarCategoria() {\n    this.service\n      .buscaCategoria(this.IdCat, this.NomeCat)\n      .subscribe(retorno => (this.categorias = retorno));\n  }\n  buscarProdutos() {\n    this.service\n      .buscaProduto(this.IdProd, this.NomeProd, this.IdCat)\n      .subscribe(retorno => (this.produtos = retorno));\n  }\n  apagarCat() {\n    this.service\n      .apagaCat(this.IdCat)\n      .subscribe(retorno => (this.categorias = retorno));\n  }\n  apagarProd() {\n    this.service.apagaProd(this.IdProd).subscribe(retorno => {\n      this.produtos = retorno;\n      this.buscarProdutos();\n    });\n  }\n  reportsProdCat() {\n    this.service.reportProdCat(this.IdProd, this.NomeProd, this.IdCat, this.NomeCat)\n      .subscribe(retorno => (this.relatorios = retorno));\n  }\n  ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/web-api/web-api.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}