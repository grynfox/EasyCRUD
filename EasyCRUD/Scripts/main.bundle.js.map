{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/web-api/web-api.component.css","./src/app/web-api/web-api.component.html","./src/app/web-api/web-api.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,mB;;;;;;;ACAA,gD;;;;;;;;;;;;;;;;ACAA,8EAA0C;AAO1C;IALA;QAME,gBAAW,GAAG,IAAI,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFY,oCAAY;;;;;;;;;;;;;;;;;ACPzB,kHAA0D;AAC1D,8EAAyC;AACzC,iFAA6C;AAC7C,8EAA2C;AAG3C,wEAA+C;AAC/C,wFAA8D;AAC9D,mFAAiE;AACjE,gFAA8E;AAuB9E;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,eAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4BAAY;gBACZ,mCAAe;aAChB;YACD,OAAO,EAAE;gBACN,8BAAc,CAAC,OAAO,EAAE,EAAE,gCAAgB,CAAC,OAAO,EAAE;gBACrD,uBAAuB;gBACvB,gCAAa;gBACb,mBAAW;gBACX,iBAAU;gBACV,uBAAgB;gBAChB,2BAAoB,CAAC,WAAW,CAAC;oBAC/B,UAAU,EAAE,YAAY;oBACxB,UAAU,EAAE,cAAc;iBAC7B,CAAC;aACD;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,4BAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAb,8BAAS;;;;;;;;AChCtB,mB;;;;;;;ACAA,k9F;;;;;;;;;;;;;;;;;;;ACAA,8EAAkD;AAClD,wDAAwD;AACxD,qEAA+B;AAC/B,8EAAqC;AAOrC;IAGE,yBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFhC,+CAA+C;QAC/C,QAAG,GAAW,MAAM,CAAC;IAElB,CAAC;IAEF,kCAAQ,GAAR;IACA,CAAC;IAPU,eAAe;QAL3B,gBAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAI0B,WAAI;OAHnB,eAAe,CAS3B;IAAD,sBAAC;CAAA;AATY,0CAAe;;;;;;;;;;ACV5B,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;;AAElE,mBAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;ACPF,0IAA2E;AAC3E,8EAA+C;AAC/C,6EAAyD;AACzD,kEAA6C;AAE7C,EAAE,CAAC,CAAC,yBAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,qBAAc,EAAE,CAAC;AACnB,CAAC;AAED,iDAAsB,EAAE,CAAC,eAAe,CAAC,sBAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-web-api></app-web-api>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isCollapsed = true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { Renderer2 } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { WebApiComponent } from './web-api/web-api.component';\nimport { CollapseModule, BsDropdownModule } from 'ngx-bootstrap';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WebApiComponent\n  ],\n  imports: [\n     CollapseModule.forRoot(), BsDropdownModule.forRoot(),\n    // NgbModule.forRoot(),\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'XSRF-TOKEN',\n      headerName: 'X-XSRF-TOKEN'\n  }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/web-api/web-api.component.css\n// module id = ./src/app/web-api/web-api.component.css\n// module chunks = main","module.exports = \"<div class=\\\"navbar navbar-dark navbar-expand-lg bg-dark\\\">\\n    <form class=\\\"form-inline\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\"\\n  (click)=\\\"aba= 'home'\\\">Easy </button>\\n  <button class=\\\"btn btn-sm btn-outline-secondary \\\" (click)=\\\"aba= 'cadastroProd'\\\"\\n   type=\\\"button\\\">Product Registration</button>\\n    <button class=\\\"btn btn-sm btn-outline-secondary \\\"(click)=\\\"aba= 'cadastroCat'\\\"\\n     type=\\\"button\\\">Category Registration</button>\\n    <button class=\\\"btn btn-sm btn-outline-secondary \\\"(click)=\\\"aba= 'relatorio'\\\" type=\\\"button\\\">\\n     Reports</button>\\n    </form>\\n  </div>\\n\\n<div class=\\\"container\\\" [ngSwitch]=\\\"aba\\\">\\n  <p *ngSwitchCase=\\\"'relatorio'\\\">relatorio</p>\\n</div>\\n<!--cadastro de produtos!-->\\n<form [ngSwitch]=\\\"aba\\\" >\\n  <!--Cadastro de Produtos-->\\n    <div class=\\\"form-row\\\" *ngSwitchCase=\\\"'cadastroProd'\\\">\\n        <div class=\\\"col-md-4 mb-3\\\">\\n          <label for=\\\"validationServer01\\\">Produto</label>\\n          <input type=\\\"text\\\" class=\\\"form-control is-valid\\\" id=\\\"CadastraProduto\\\" required>\\n          <div class=\\\"valid-feedback\\\">\\n            Digite o nome do produto a ser cadastrado.\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <select class=\\\"custom-select\\\" required>\\n                <option value=\\\"\\\">Categoria</option>\\n                <option value=\\\"1\\\">One</option>\\n                <option value=\\\"2\\\">Two</option>\\n                <option value=\\\"3\\\">Three</option>\\n              </select>\\n            </div>\\n            <div>\\n              <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Cadastra um Produto no banco de dados\\\">Cadastrar</button>\\n            </div>\\n        </div>\\n      </div>\\n      <!--Cadastro de Categorias-->\\n    <div class=\\\"form-row\\\" *ngSwitchCase=\\\"'cadastroCat'\\\">\\n      <div class=\\\"col-md-4 mb-3\\\">\\n        <label for=\\\"validationServer01\\\">Categoria</label>\\n        <input type=\\\"text\\\" class=\\\"form-control is-valid\\\" id=\\\"CadastraCat\\\" required>\\n        <div class=\\\"valid-feedback\\\">\\n          Digite a Categoria a ser cadastrada.\\n        </div>\\n          <div>\\n            <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Cadastra um Produto no banco de dados\\\">Cadastrar</button>\\n          </div>\\n      </div>\\n    </div>\\n\\n    <!--Mostra minha apresentação!-->\\n    <div class=\\\"card text-center\\\"  *ngSwitchCase=\\\"'home'\\\">\\n      <!--img class=\\\"card-img-top\\\" src=\\\"\\\\assets\\\\igor.jpg\\\" alt=\\\"Card image cap\\\"!-->\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Igor Alexandre Saraiva Silva</h5>\\n        <p class=\\\"card-text\\\">This is the realization of a simple CRUD. I'm using ASP.NET + Angular 5 with bootstrap and Entity Framework </p>\\n        <a href=\\\"https://www.linkedin.com/in/igoralexandre/\\\" class=\\\"btn-outline-info\\\">Linkedin</a>\\n      </div>\\n    </div>\\n  </form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/web-api/web-api.component.html\n// module id = ./src/app/web-api/web-api.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport 'rxjs/add/operator/map';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n@Component({\n  selector: 'app-web-api',\n  templateUrl: './web-api.component.html',\n  styleUrls: ['./web-api.component.css']\n})\nexport class WebApiComponent implements OnInit {\n// tslint:disable-next-line:no-inferrable-types\naba: string = 'home';\n  constructor(private http: Http) {\n   }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/web-api/web-api.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}