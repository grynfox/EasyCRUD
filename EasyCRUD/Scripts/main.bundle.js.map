{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/cadastro.service.ts","./src/app/utils/HttpHelper.ts","./src/app/web-api/web-api.component.css","./src/app/web-api/web-api.component.html","./src/app/web-api/web-api.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-web-api></app-web-api>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  isCollapsed = true;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { CadastroService } from './services/cadastro.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { Renderer2 } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { WebApiComponent } from './web-api/web-api.component';\nimport { CollapseModule, BsDropdownModule } from 'ngx-bootstrap';\nimport { HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WebApiComponent\n  ],\n  imports: [\n     CollapseModule.forRoot(), BsDropdownModule.forRoot(),\n    // NgbModule.forRoot(),\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'XSRF-TOKEN',\n      headerName: 'X-XSRF-TOKEN'\n  }),\n  ],\n  providers: [CadastroService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { HttpHelper } from './../utils/HttpHelper';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class CadastroService extends HttpHelper {\r\n  private _cadastraCategoria = \"Cadastro/CadastraCategoria\";\r\n  private _cadastraProduto = \"Cadastro/CadastraProduto\";\r\n\r\n  constructor( http: Http){\r\n    super(http);\r\n  }\r\n  cadastraCategoria(nomeCatParam: string){\r\n    let result = this.postaction(this._cadastraCategoria, { NomeCat: nomeCatParam}).map(\r\n      result => {\r\n          let pedido = <any>result;\r\n          return pedido;\r\n      }\r\n  ).catch(err => { return Observable.throw(err || 'Server error'); });\r\n  return result;\r\n  }\r\n  cadastraProduto(NomeProd: string, IdCat: number){\r\n    \r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/cadastro.service.ts","import { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\n\r\nexport class HttpHelper {\r\n    private _base = \"API/\";\r\n    constructor(private _http: Http) {\r\n    }\r\n\r\n    get haserror(): boolean {\r\n        return this.errormsg != null;\r\n    }\r\n\r\n    errormsg: string;\r\n\r\n    private obj_to_query(obj: any) {\r\n        var parts: any = [];\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                parts.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\r\n            }\r\n        }\r\n        return parts? \"?\" + parts.join('&'): \"\";\r\n    }\r\n\r\n    getaction<T>(path: string, body: any = null) {\r\n        return this._http.get(this._base + path + this.obj_to_query(body))\r\n            .map(res => {\r\n                return <T>res.json();\r\n            })\r\n            .catch(this._handleError);\r\n    }\r\n\r\n    postaction(path: string, param: any = null) {\r\n        this.errormsg = null;\r\n\r\n        let body = JSON.stringify(param);\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this._http.post(this._base + path, body, options)\r\n            .map(this._handleSuccess)\r\n            .catch(this._handleError);\r\n    }\r\n\r\n    private _handleError(error: Response) {\r\n        if (error.status == 401) {\r\n            localStorage.removeItem('currentUser');\r\n            location.reload();\r\n        }\r\n\r\n        return Observable.throw(error || 'Server error');\r\n    }\r\n    private _handleSuccess(success: Response) {\r\n        var jsonresult = null;\r\n        try {\r\n            jsonresult = success.json();\r\n        } catch (ex) {\r\n            return success;\r\n        }\r\n\r\n        return jsonresult;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utils/HttpHelper.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/web-api/web-api.component.css\n// module id = ./src/app/web-api/web-api.component.css\n// module chunks = main","module.exports = \"<div class=\\\"navbar navbar-dark navbar-expand-lg bg-dark\\\">\\n    <form class=\\\"form-inline\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\"\\n  (click)=\\\"aba= 'home'\\\">Easy </button>\\n  <button class=\\\"btn btn-sm btn-outline-secondary \\\" (click)=\\\"aba= 'cadastroProd'\\\"\\n   type=\\\"button\\\">Product Registration</button>\\n    <button class=\\\"btn btn-sm btn-outline-secondary \\\"(click)=\\\"aba= 'cadastroCat'\\\"\\n     type=\\\"button\\\">Category Registration</button>\\n    <button class=\\\"btn btn-sm btn-outline-secondary \\\"(click)=\\\"aba= 'relatorio'\\\" type=\\\"button\\\">\\n     Reports</button>\\n    </form>\\n  </div>\\n\\n<div class=\\\"container\\\" [ngSwitch]=\\\"aba\\\">\\n  <p *ngSwitchCase=\\\"'relatorio'\\\">relatorio</p>\\n</div>\\n<!--cadastro de produtos!-->\\n<form [ngSwitch]=\\\"aba\\\" >\\n  <!--Cadastro de Produtos-->\\n    <div class=\\\"form-row\\\" *ngSwitchCase=\\\"'cadastroProd'\\\">\\n        <div class=\\\"col-md-4 mb-3\\\">\\n          <label for=\\\"validationServer01\\\">Produto</label>\\n          <input type=\\\"text\\\" class=\\\"form-control is-valid\\\" id=\\\"CadastraProduto\\\" required>\\n          <div class=\\\"valid-feedback\\\">\\n            Digite o nome do produto a ser cadastrado.\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <select class=\\\"custom-select\\\" required>\\n                <option value=\\\"\\\">Categoria</option>\\n                <option value=\\\"1\\\">One</option>\\n                <option value=\\\"2\\\">Two</option>\\n                <option value=\\\"3\\\">Three</option>\\n              </select>\\n            </div>\\n            <div>\\n              <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Cadastra um Produto no banco de dados\\\">Cadastrar</button>\\n            </div>\\n        </div>\\n      </div>\\n      <!--Cadastro de Categorias-->\\n    <div class=\\\"form-row\\\" *ngSwitchCase=\\\"'cadastroCat'\\\">\\n      <div class=\\\"col-md-4 mb-3\\\">\\n        <label for=\\\"validationServer01\\\">Categoria</label>\\n        <input type=\\\"text\\\" class=\\\"form-control is-valid\\\" id=\\\"CadastraCat\\\" [(ngModel)]=\\\"NomeCat\\\" required>\\n        <div class=\\\"valid-feedback\\\">\\n          Digite a Categoria a ser cadastrada.\\n        </div>\\n          <div>\\n            <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" (click)=\\\"cadastrar();\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Cadastra um Produto no banco de dados\\\">Cadastrar</button>\\n          </div>\\n      </div>\\n    </div>\\n\\n    <!--Mostra minha apresentação!-->\\n    <div class=\\\"card text-center\\\"  *ngSwitchCase=\\\"'home'\\\">\\n      <!--img class=\\\"card-img-top\\\" src=\\\"\\\\assets\\\\igor.jpg\\\" alt=\\\"Card image cap\\\"!-->\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Igor Alexandre Saraiva Silva</h5>\\n        <p class=\\\"card-text\\\">This is the realization of a simple CRUD. I'm using ASP.NET + Angular 5 with bootstrap and Entity Framework </p>\\n        <a href=\\\"https://www.linkedin.com/in/igoralexandre/\\\" class=\\\"btn-outline-info\\\">Linkedin</a>\\n      </div>\\n    </div>\\n  </form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/web-api/web-api.component.html\n// module id = ./src/app/web-api/web-api.component.html\n// module chunks = main","import { CadastroService } from './../services/cadastro.service';\nimport { Component, OnInit } from '@angular/core';\n// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport 'rxjs/add/operator/map';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n@Component({\n  selector: 'app-web-api',\n  templateUrl: './web-api.component.html',\n  styleUrls: ['./web-api.component.css']\n})\nexport class WebApiComponent implements OnInit {\n// tslint:disable-next-line:no-inferrable-types\naba: string = 'home';\nNomeCat: string;\n  constructor(private service: CadastroService) {\n   }\n   cadastrar(){\n     this.service.cadastraCategoria(this.NomeCat).subscribe(retorno => alert(retorno));\n   }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/web-api/web-api.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}